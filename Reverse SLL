#include<iostream>
using namespace std;

class Node
{
    public: 
    int data;
    Node *next;
    
    Node(int val)
    {
        data = val;
        next = NULL;
    }
};

void insert(Node *&head , int val)
{
    Node *n = new Node(val);
    if(head == NULL)
    {
        head = n;
        return;
    }
    
    Node *temp = head;
    while(temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
    
};

void display(Node *head)
{
    Node *temp = head;
    if(temp == NULL)
    {
        cout<<"List is Empty!";
    }
    
    while(temp != NULL)
    {
        cout<<temp->data<<"->";
        temp = temp->next;
    }
    
    cout<<"NULL"<<endl;
};

Node* reverse(Node *head)
{
    Node *prev = NULL;
    Node *curr = head;
    Node *next = NULL;
    
    while(curr != NULL)
    {
        next = curr->next;
        curr->next = prev;
        
        prev = curr;
        curr = next;
    }
    return prev;
}

int main()
{
    Node *head = NULL;
    
    insert(head,1);
    insert(head,2);
    insert(head,3);
    insert(head,4);
    insert(head,5);
    
    display(head);
    Node *revHead = reverse(head);
    
    display(revHead);
    
    return 0;
}
