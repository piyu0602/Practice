#include <iostream>

using namespace std;

class Node
{
public:
    int data;
    Node *next;

    Node(int val)
    {
        data = val;
        next = NULL;
    }
};

void insertAtTail(Node *&head, int val)
{
    Node *n = new Node(val);

    if (head == NULL)
    {
        head = n;
        return;
    }

    Node *temp = head;

    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
};

void insertAtHead(Node *&head, int val)
{
    Node *n = new Node(val);

    n->next = head;
    head = n;
}

void display(Node *head)
{
    Node *temp = head;

    while (temp != NULL)
    {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
};

bool search(Node *head, int key)
{
    Node *temp = head;

    while (temp != NULL)
    {
        if (temp->data == key)
        {
            return true;
        }
        temp = temp->next;
    }

    return false;
}

void insertNodeAtPosition(Node *&head, int val, int position)
{
    Node *n = new Node(val);

    if (head == NULL)
    {
        head = n;
        return;
    }

    if (position == 0)
    {
        n->next = head;
        head = n;
    }

    Node *temp = head;

    int counter = 0;
    while (temp->next != NULL)
    {
        if ((counter) == position - 1)
        {
            n->next = temp->next;
            temp->next = n;
        }
        temp = temp->next;
        counter++;
    }
}

int main()
{
    Node *head = NULL;
    insertAtTail(head, 1);
    display(head);
    insertAtTail(head, 2);
    display(head);
    insertAtHead(head, 3);
    display(head);
    insertNodeAtPosition(head, 8, 2);
    display(head);
    return 0;
}
